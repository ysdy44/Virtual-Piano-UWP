<Page
    x:Class="Virtual_Piano.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:globalization="using:System.Globalization"
    xmlns:controls="using:Virtual_Piano.Controls"
    xmlns:elements="using:Virtual_Piano.Elements"
    xmlns:controllers="using:Virtual_Piano.Midi.Controllers"
    xmlns:instruments="using:Virtual_Piano.Midi.Instruments"
    xmlns:strings="using:Virtual_Piano.Strings"
    mc:Ignorable="d"
    NavigationCacheMode="Enabled"
    Background="{ThemeResource AppBackground}"
    FlowDirection="{x:Bind Direction}"
    >

    <!--Extension-->
    <FrameworkElement.Tag>
        <elements:ApplicationTitleBarExtension x:Name="ApplicationView" TitleBarColor="{ThemeResource AppBackgroundColor}"/>
    </FrameworkElement.Tag>

    <FrameworkElement.Resources>
        <!--Collection-->
        <CollectionViewSource x:Name="MidiInstrumentCollection" IsSourceGrouped="True">
            <CollectionViewSource.Source>
                <controls:InstrumentGroupingCollection/>
            </CollectionViewSource.Source>
            <!--Source-->
        </CollectionViewSource>
        <!--Template-->
        <DataTemplate x:Name="LanguageUseSystemSettingTemplate">
            <TextBlock Text="{strings:UI Type=LanguageUseSystemSetting}">
                <!--Use system setting-->
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Name="LanguageTemplate" x:DataType="globalization:CultureInfo">
            <TextBlock>                  
                <Run FontWeight="Medium" Text="{Binding NativeName, Mode=OneTime}"/>              
                <Run Text=" "/>                
                <Run Text="{Binding DisplayName, Mode=OneTime}" Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"/>
            </TextBlock>
        </DataTemplate>
    </FrameworkElement.Resources>

    <SplitView
        x:Name="SplitView"
        DisplayMode="Inline"
        IsPaneOpen="False"
        OpenPaneLength="280"
        PaneBackground="{ThemeResource AppBackground}"
        Background="{x:Null}"
        >

        <!--VisualState-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>

                <!--Phone-->
                <VisualState x:Name="Phone">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--SplitView-->
                        <Setter Target="SplitView.DisplayMode" Value="Overlay"/>
                    </VisualState.Setters>
                </VisualState>

                <!--Pad-->
                <VisualState x:Name="Pad">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--SplitView-->
                        <!--<Setter Target="SplitView.DisplayMode" Value="CompactOverlay"/>-->
                        <Setter Target="SplitView.DisplayMode" Value="Overlay"/>
                    </VisualState.Setters>
                </VisualState>

                <!--PC-->
                <VisualState x:Name="PC">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900"/>
                    </VisualState.StateTriggers>
                </VisualState>

            </VisualStateGroup>
            <VisualStateGroup>

                <!--Piano-->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--PianoTopPanel-->
                        <Setter Target="PianoTopPanel.Height" Value="Auto"/>
                        <Setter Target="PianoTopPanel.VerticalAlignment" Value="Stretch"/>
                    </VisualState.Setters>
                </VisualState>

                <!--Piano-->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="500"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--PianoTopPanel-->
                        <Setter Target="PianoTopPanel.Height" Value="420"/>
                        <Setter Target="PianoTopPanel.VerticalAlignment" Value="Center"/>
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <SplitView.Pane>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="82"/>
                    <RowDefinition Height="6"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <elements:CommandListView
                    Grid.Row="2"
                    SelectionMode="None"
                    IsItemClickEnabled="True"
                    ItemsSource="{x:Bind MidiInstrumentCollection.View}"
                    Command="{x:Bind Command}"
                    >
                    <ItemsControl.GroupStyle>
                        <GroupStyle/>
                    </ItemsControl.GroupStyle>
                    <!--Items-->
                </elements:CommandListView>

                <Grid Background="{ThemeResource AppForeground}">

                    <Button 
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        CommandParameter="{x:Bind DemoNote}"
                        Command="{x:Bind Command}"
                        Style="{StaticResource TextBlockButtonStyle}"
                        >
                        <StackPanel Spacing="2">
                            <TextBlock FontSize="32" IsColorFontEnabled="False" HorizontalAlignment="Center" Text="{x:Bind Favorites.Emoji, Mode=OneWay}"/>
                            <TextBlock FontSize="14" HorizontalAlignment="Center" Text="{x:Bind Favorites.String, Mode=OneWay}"/>
                        </StackPanel>
                    </Button>

                    <elements:CommandCheckedButton
                        Width="44" 
                        Height="44" 
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        IsChecked="{x:Bind Favorites.IsContains, Mode=OneWay}"
                        UncheckedSymbol="OutlineStar"
                        CheckedSymbol="SolidStar"
                        CommandParameter="{x:Bind Favorites.IsContains, Mode=OneWay}"
                        Command="{x:Bind Favorites.Command}"
                        Style="{StaticResource TextBlockButtonStyle}"
                        >
                        <ToolTipService.ToolTip>
                            <ToolTip Placement="Bottom">
                                <TextBlock>
                                    <Run Text="{strings:UI Type=Favorite}">
                                        <!--Favorites-->
                                    </Run>
                                    /
                                    <Run Text="{strings:UI Type=UnFavorite}">
                                        <!--UnFavorite-->
                                    </Run>
                                </TextBlock>
                            </ToolTip>
                        </ToolTipService.ToolTip>
                    </elements:CommandCheckedButton>

                </Grid>
                
            </Grid>
        </SplitView.Pane>

        <Grid>
            <!--
            <Grid.RowDefinitions>
                <RowDefinition Height="44"/>
                <RowDefinition Height="*" MinHeight="200"/>
                <RowDefinition Height="4"/>
                <RowDefinition Height="44"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            -->


            <Grid.RowDefinitions>
                <RowDefinition Height="44"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!--Title
            <TextBlock Grid.Row="1" IsHitTestVisible="False" Margin="30,6" Foreground="White" FontSize="80" FontFamily="Kunstler Script" HorizontalAlignment="Right" VerticalAlignment="Top">
                Virtual Piano
            </TextBlock>
            -->

            <!--Head-->
            <!--
            <ScrollViewer 
                ZoomMode="Disabled"
                 
                HorizontalScrollMode="Enabled"
                HorizontalScrollBarVisibility="Hidden"
                IsHorizontalScrollChainingEnabled="True"
              
                VerticalScrollMode="Disabled"
                VerticalScrollBarVisibility="Disabled"
                IsVerticalScrollChainingEnabled="False"
                >
                <FrameworkElement.Resources>
                    -->
                    <!--Style-->
                    <!--
                    <Style TargetType="Button" BasedOn="{StaticResource TextBlockButtonStyle}">
                        <Setter Property="MinWidth" Value="44" />
                        <Setter Property="Height" Value="36" />
                        <Setter Property="FontSize" Value="10" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="Padding" Value="2" />
                    </Style>
                </FrameworkElement.Resources>
                <StackPanel Padding="12,0" Orientation="Horizontal" Spacing="8" Height="36" Background="Black"  HorizontalAlignment="Center" VerticalAlignment="Center">

                    <ListView                        
                        SelectedIndex="0"
                        SelectionMode="Single"
                 
                        ScrollViewer.ZoomMode="Disabled"
                      
                        ScrollViewer.HorizontalScrollMode="Disabled"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        ScrollViewer.IsHorizontalScrollChainingEnabled="False"
                 
                        ScrollViewer.VerticalScrollMode="Disabled"
                        ScrollViewer.VerticalScrollBarVisibility="Disabled"
                        ScrollViewer.IsVerticalScrollChainingEnabled="False"
                        >

                        <ItemsControl.ItemContainerTransitions>
                            <TransitionCollection>

                            </TransitionCollection>
                        </ItemsControl.ItemContainerTransitions>

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="MinWidth" Value="54" />
                                <Setter Property="MaxWidth" Value="54" />
                                <Setter Property="Width" Value="54" />
                                <Setter Property="MinHeight" Value="36" />
                                <Setter Property="MaxHeight" Value="36" />
                                <Setter Property="Height" Value="36" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>

                        <ListViewItem>
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Select
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <PathIcon>
                                <PathIcon.Data>
                                    M16,15L0,0L0,23L6,16L16,15ZM12.947,13.965L5.335,14.726L1.333,19.396C1.333,19.396 1.333,3.078 1.333,3.078L12.947,13.965Z
                                </PathIcon.Data>
                            </PathIcon>
                        </ListViewItem>

                        <ListViewItem>
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Edit
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <PathIcon>
                                <PathIcon.Data>
                                    M0.883,0.005L5.733,1.036L18.814,14.118C20.102,15.406 20.102,17.497 18.814,18.785C17.526,20.072 15.435,20.072 14.147,18.785C14.081,18.719 14.019,18.651 13.96,18.581L1.074,5.695L0.005,0.824L0.883,0.005ZM14.571,17.088L15.208,17.724C15.91,18.426 17.051,18.426 17.753,17.724C18.456,17.021 18.456,15.881 17.753,15.178L5.379,2.804L5.36,2.823L2.046,2.036L2.833,5.35L13.511,16.027L16.056,13.481L17.117,14.542L14.571,17.088Z
                                </PathIcon.Data>
                            </PathIcon>
                        </ListViewItem>

                        <ListViewItem>
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Delete
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <PathIcon>
                                <PathIcon.Data>
                                    M12.871,23L1.771,11.9L0,6.842L6.842,0L21.691,14.849L13.54,23L12.871,23ZM11.202,6.246L19.805,14.849C19.805,14.849 13.206,21.449 13.206,21.449L4.603,12.846L11.202,6.246ZM10.142,5.185L3.542,11.785L2.929,11.172C2.929,11.172 1.535,7.192 1.535,7.192C1.535,7.192 6.842,1.886 6.842,1.886L10.142,5.185Z
                                </PathIcon.Data>
                            </PathIcon>
                        </ListViewItem>

                    </ListView>

                    <Line Y1="10" Y2="28" StrokeThickness="1" Stroke="{ThemeResource SystemColorControlAccentBrush}"/>

                    <StackPanel Margin="2,0" Orientation="Horizontal">
                        <Button>
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Pause
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <SymbolIcon Symbol="Pause"/>
                        </Button>
                        <Button>
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Play
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <SymbolIcon Symbol="Play"/>
                        </Button>
                        <Button>
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Stop
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <SymbolIcon Symbol="Stop"/>
                        </Button>
                    </StackPanel>

                    <Line Y1="10" Y2="28" StrokeThickness="1" Stroke="{ThemeResource SystemColorControlAccentBrush}"/>

                    <StackPanel Margin="12,0" Orientation="Horizontal" Spacing="16">

                        <elements:DSTimer x:Name="DSTimer" Time="00:00:00.000"/>

                        <Button Width="60">
                            <Button.Flyout>
                                <Flyout>
                                    <Border
                                        Width="44"
                                        CornerRadius="6"
                                        BorderBrush="Transparent"
                                        Background="{ThemeResource AppForeground}"
                                        HorizontalAlignment="Center"
                                        >
                                        <Slider 
                                            x:Name="TempoSlider"
                                            Margin="0,12"
                                            IsEnabled="True"
                                            Height="320" 
                                            Value="120"
                                            Minimum="20"
                                            Maximum="240"
                                            StepFrequency="20"
                                            TickFrequency="20"
                                            TickPlacement="Outside"
                                            Orientation="Vertical"
                                            IsThumbToolTipEnabled="False"
                                            />
                                    </Border>
                                </Flyout>
                            </Button.Flyout>
                            <TextBlock>
                                <Run></Run>
                                <Run FontSize="14" Text="{x:Bind TempoSlider.Value,Mode=OneWay}">
                                    -->
                                    <!--Text-->
                                    <!--
                                </Run><Run FontSize="14">.</Run><Run>00</Run>
                                <LineBreak/>
                                <Run>Tempo</Run>
                            </TextBlock>
                        </Button>

                        <Button>
                            <TextBlock>
                                <Run></Run>
                                <Run FontSize="14">4</Run><Run FontSize="14">/</Run><Run FontSize="14">4</Run>
                                <LineBreak/>
                                <Run>Signature</Run>
                            </TextBlock>
                        </Button>

                    </StackPanel>

                </StackPanel>
            </ScrollViewer>
            -->

            <!--Body-->
            <!--
            <SplitView
                Grid.Row="1"
                DisplayMode="Inline"
                OpenPaneLength="280"
                Background="{x:Null}"
                PaneBackground="{x:Null}"
                IsPaneOpen="{x:Bind ReverseBooleanNullableToBooleanConverter(DockLeftButton.IsChecked), Mode=OneWay}" 
                >
                -->
                <!--Left-->
                <!--
                <SplitView.Pane>
                    <Grid Margin="4,0,0,6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="44"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                            <RowDefinition Height="82"/>
                        </Grid.RowDefinitions>
                        -->

                        <!--Head-->
                        <!--
                        <ListView
                            SelectedIndex="1"
                            SelectionMode="Single"
                        
                            ScrollViewer.ZoomMode="Disabled"
                          
                            ScrollViewer.HorizontalScrollMode="Enabled"
                            ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                            ScrollViewer.IsHorizontalScrollChainingEnabled="True"
                        
                            ScrollViewer.VerticalScrollMode="Disabled"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled"
                            ScrollViewer.IsVerticalScrollChainingEnabled="False"
                            >

                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="MinWidth" Value="54" />
                                    <Setter Property="MaxWidth" Value="54" />
                                    <Setter Property="Width" Value="54" />
                                    <Setter Property="MinHeight" Value="36" />
                                    <Setter Property="MaxHeight" Value="36" />
                                    <Setter Property="Height" Value="36" />
                                    <Setter Property="Background" Value="{ThemeResource AppFill}" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ListViewItem x:Name="ListViewItem41">
                                <ToolTipService.ToolTip>
                                    <ToolTip>
                                        Sounds
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <SymbolIcon Symbol="AllApps"/>
                            </ListViewItem>

                            <ListViewItem x:Name="ListViewItem42">
                                <ToolTipService.ToolTip>
                                    <ToolTip>
                                        Favorites
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <SymbolIcon Symbol="SolidStar"/>
                            </ListViewItem>

                            <ListViewItem x:Name="ListViewItem43">
                                <ToolTipService.ToolTip>
                                    <ToolTip>
                                        Pedals
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <SymbolIcon Symbol="CalendarWeek"/>
                            </ListViewItem>

                        </ListView>
                        -->

                        <!--Body-->
                        <!--
                        <Grid Grid.Row="1">

                        -->
                        <!--Sounds-->
                        <!--
                            <controls:InstrumentSplitView InstrumentGroupPanel="{x:Bind InstrumentGroupPanel}" Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem41.IsSelected), Mode=OneWay}">
                                <ScrollViewer>
                                    <controls:InstrumentGroupPanel x:Name="InstrumentGroupPanel" Command="{x:Bind Command}"/>
                                </ScrollViewer>
                            </controls:InstrumentSplitView>

                            -->
                            <!--Favorite-->
                            <!--
                            <ScrollViewer Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem42.IsSelected), Mode=OneWay}">
                                <controls:InstrumentCollectionPanel ObservableCollection="{x:Bind Favorites}" Command="{x:Bind Command}"/>
                            </ScrollViewer>

                            -->
                            <!--Pedal-->
                            <!--
                            <Grid ColumnSpacing="6" Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem43.IsSelected), Mode=OneWay}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <controllers:Pedal Controller="Sustain" BorderBrush="{ThemeResource AppFill}" Background="{ThemeResource AppForeground}" Command="{x:Bind Command}">
                                    Sustain
                                </controllers:Pedal>
                                <controllers:Pedal Grid.Column="1" Controller="AllNotesOff" BorderBrush="{ThemeResource AppFill}" Background="{ThemeResource AppForeground}" Command="{x:Bind Command}">
                                    SoftPedal
                                </controllers:Pedal>
                                <controllers:Pedal Grid.Column="2" Controller="Sostenuto" BorderBrush="{ThemeResource AppFill}" Background="{ThemeResource AppForeground}" Command="{x:Bind Command}">
                                    Sostenuto
                                </controllers:Pedal>
                            </Grid>

                        </Grid>
                        -->

                        <!--Bar-->
                        <!--
                        <Grid Grid.Row="3" CornerRadius="6" Background="{ThemeResource AppForeground}">

                            <Button 
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                CommandParameter="{x:Bind DemoNote}"
                                Command="{x:Bind Command}"
                                Style="{StaticResource TextBlockButtonStyle}"
                                >
                                <StackPanel Spacing="2">
                                    <TextBlock FontSize="32" IsColorFontEnabled="False" HorizontalAlignment="Center" Text="{x:Bind Favorites.Emoji, Mode=OneWay}"/>
                                    <TextBlock FontSize="14" HorizontalAlignment="Center" Text="{x:Bind Favorites.String, Mode=OneWay}"/>
                                </StackPanel>
                            </Button>

                            <elements:CommandCheckedButton
                                Width="44" 
                                Height="44" 
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                IsChecked="{x:Bind Favorites.IsContains, Mode=OneWay}"
                                UncheckedSymbol="OutlineStar"
                                CheckedSymbol="SolidStar"
                                CommandParameter="{x:Bind Favorites.IsContains, Mode=OneWay}"
                                Command="{x:Bind Favorites.Command}"
                                Style="{StaticResource TextBlockButtonStyle}"
                                >
                                <ToolTipService.ToolTip>
                                    <ToolTip>
                                        Favorite
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                            </elements:CommandCheckedButton>

                        </Grid>

                    </Grid>
                </SplitView.Pane>
                -->

                <!--
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    -->
                    <!--Bar-->
                    <!--
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="44"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="44"/>
                        </Grid.RowDefinitions>

                        <Button      
                            Width="60" 
                            Height="44"
                            CommandParameter="{x:Bind VelocitySlider.IsEnabled, Mode=OneWay}"
                            Command="{x:Bind VelocitySlider}"
                            Style="{StaticResource TextBlockButtonStyle}"
                            >
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Mute
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"
                                >
                                <SymbolIcon Symbol="Mute" Visibility="{x:Bind ReverseBooleanToVisibilityConverter(VelocitySlider.IsEnabled), Mode=OneWay}"/>
                                <TextBlock 
                                    FontFamily="Agency FB" 
                                    FontWeight="Bold"
                                    FontSize="16" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    Text="{x:Bind DoubleToStringConverter(VelocitySlider.Value), Mode=OneWay}"
                                    Visibility="{x:Bind BooleanToVisibilityConverter(VelocitySlider.IsEnabled), Mode=OneWay}"
                                    />
                            </Grid>
                        </Button>

                        <Border
                            Grid.Row="1" 
                            Width="44"
                            CornerRadius="6"
                            BorderBrush="Transparent"
                            Background="{ThemeResource AppForeground}"
                            HorizontalAlignment="Center"
                            >
                            <controllers:VelocitySlider
                                x:Name="VelocitySlider"
                                Margin="0,12"
                                Value="127"
                                IsEnabled="True"
                                Maximum="127"
                                TickFrequency="32"
                                TickPlacement="Outside"
                                Orientation="Vertical"
                                IsThumbToolTipEnabled="False"
                                Controller="MainVolume"
                                Command="{x:Bind Command}"
                                />
                        </Border>

                        <controllers:IndicatorGauge Grid.Row="3" Controller="Pan" Command="{x:Bind Command}">
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Panorama
                                </ToolTip>
                            </ToolTipService.ToolTip>
                        </controllers:IndicatorGauge>

                        <ToggleButton x:Name="DockLeftButton" Grid.Row="4" IsChecked="False" Width="60" Padding="0" VerticalAlignment="Stretch" Style="{StaticResource TextBlockButtonStyle}">
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Dock
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <SymbolIcon Symbol="DockLeft"/>
                        </ToggleButton>

                    </Grid>
            
                    -->
                    <!--Separator-->
                    <!--
                    <Rectangle Grid.Column="1" Fill="{ThemeResource AppStroke}"/>

                    <Grid Grid.Column="2">
                        <controllers:TrackNotePanel x:Name="TrackNotePanel">
                            <instruments:PianoLeftPanel x:Name="PianoLeftPanel" Command="{x:Bind Command}"/>
                        </controllers:TrackNotePanel>
                    </Grid>

                </Grid>
            </SplitView>
            -->

            <!--ProgressBar-->
            <!--
            <ProgressBar 
                x:Name="ProgressBar" 
                Grid.Row="2"
                Height="4" 
                Value="0"
                Background="{ThemeResource AppStroke}"
                />
            -->

            <!--Head-->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" MinWidth="50" MaxWidth="80"/>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="1*" MinWidth="50" MaxWidth="80"/>
                </Grid.ColumnDefinitions>              
                
                    <Button x:Name="SplitButton" Width="Auto" Padding="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource TextBlockButtonStyle}">
                        <ToolTipService.ToolTip>
                            <ToolTip Placement="Bottom" Content="{strings:UI Type=Split}">
                                <!--Split-->
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <SymbolIcon Symbol="GlobalNavigationButton"/>
                    </Button>
                
                    <Button Grid.Column="2" Width="Auto" Padding="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource TextBlockButtonStyle}">
                        <ToolTipService.ToolTip>
                            <ToolTip Placement="Bottom" Content="{strings:UI Type=More}">
                                <!--More-->
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <Button.Flyout>
                            <MenuFlyout Placement="Bottom">

                                <!--Piano-->
                                <MenuFlyoutItem
                                    Text="{strings:UI Type=TryShowPianoView}"
                                    Command="{x:Bind Command}" 
                                    CommandParameter="{strings:OptionType Type=TryShowPianoView}" 
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem0.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData2(0)}"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Show Piano View-->
                                </MenuFlyoutItem>
                                <MenuFlyoutSeparator Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem0.IsSelected), Mode=OneWay}"/>
                                <ToggleMenuFlyoutItem
                                    x:Name="BendItem"
                                    IsChecked="False" 
                                    Text="{strings:UI Type=Bends}"
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem0.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="Rotate"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Bend-->
                                </ToggleMenuFlyoutItem>
                                <ToggleMenuFlyoutItem 
                                    x:Name="PedalItem"
                                    IsChecked="False" 
                                    Text="{strings:UI Type=Pedals}"
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem0.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="CalendarWeek"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Pedal-->
                                </ToggleMenuFlyoutItem>
                                <ToggleMenuFlyoutItem 
                                    x:Name="PianoHorizontalScrollBarItem"
                                    IsChecked="True" 
                                    Text="{strings:UI Type=DockBottom}"
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem0.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="DockBottom"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Dock Bottom-->
                                </ToggleMenuFlyoutItem>
                                <MenuFlyoutSeparator Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem0.IsSelected), Mode=OneWay}"/>
                                <ToggleMenuFlyoutItem 
                                    x:Name="Label0Item"
                                    IsChecked="False" 
                                    Text="{strings:UI Type=PianoView}"
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem0.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="Tag"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--None-->
                                </ToggleMenuFlyoutItem>
                                <ToggleMenuFlyoutItem 
                                    x:Name="Label1Item"
                                    IsChecked="False" 
                                    Text="C"
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem0.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="Tag"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--C-->
                                </ToggleMenuFlyoutItem>
                                <ToggleMenuFlyoutItem 
                                    x:Name="Label2Item"
                                    IsChecked="True" 
                                    Text="CDE"
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem0.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="Tag"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--CDE-->
                                </ToggleMenuFlyoutItem>
                                <ToggleMenuFlyoutItem 
                                    x:Name="Label3Item"
                                    IsChecked="False" 
                                    Text="DoReMi"
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem0.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="Tag"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--DoReMi-->
                                </ToggleMenuFlyoutItem>
                                
                                <!--Chord-->
                                <MenuFlyoutItem 
                                    Text="{strings:UI Type=TryShowChordView}"
                                    Command="{x:Bind Command}" 
                                    CommandParameter="{strings:OptionType Type=TryShowChordView}" 
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem1.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData2(1)}"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Show Piano Chord View-->
                                </MenuFlyoutItem>
                                <ToggleMenuFlyoutItem 
                                    x:Name="ChordItem"
                                    Text="{strings:UI Type=ChordView}"
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem1.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="Edit"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Chords-->
                                </ToggleMenuFlyoutItem>

                                <!--Guitar-->
                                <MenuFlyoutItem 
                                    Text="{strings:UI Type=TryShowGuitarView}"
                                    Command="{x:Bind Command}" 
                                    CommandParameter="{strings:OptionType Type=TryShowGuitarView}" 
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem2.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData2(2)}"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Show Guitar View-->
                                </MenuFlyoutItem>

                                <!--Bass-->
                                <MenuFlyoutItem
                                    Text="{strings:UI Type=TryShowBassView}"
                                    Command="{x:Bind Command}"
                                    CommandParameter="{strings:OptionType Type=TryShowBassView}" 
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem3.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData2(3)}"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Show Bass Guitar View-->
                                </MenuFlyoutItem>

                                <!--Harp-->
                                <MenuFlyoutItem 
                                    Text="{strings:UI Type=TryShowHarpView}"
                                    Command="{x:Bind Command}"
                                    CommandParameter="{strings:OptionType Type=TryShowHarpView}" 
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem4.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData2(4)}"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Show Harp View-->
                                </MenuFlyoutItem>

                                <!--Kit-->
                                <MenuFlyoutItem 
                                    Text="{strings:UI Type=TryShowKitView}"
                                    Command="{x:Bind Command}" 
                                    CommandParameter="{strings:OptionType Type=TryShowKitView}" 
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem5.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData2(5)}"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Show Drum Kit-Set View-->
                                </MenuFlyoutItem>

                                <!--Pad-->
                                <MenuFlyoutItem 
                                    Text="{strings:UI Type=TryShowPadView}"
                                    Command="{x:Bind Command}" 
                                    CommandParameter="{strings:OptionType Type=TryShowPadView}" 
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem6.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData2(6)}"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Show Drum Pads View-->
                                </MenuFlyoutItem>

                                <!--Drum-->
                                <MenuFlyoutItem 
                                    Text="{strings:UI Type=TryShowDrumView}"
                                    Command="{x:Bind Command}" 
                                    CommandParameter="{strings:OptionType Type=TryShowDrumView}"
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem7.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData2(7)}"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Show Drum View-->
                                </MenuFlyoutItem>

                                <!--Machine-->
                                <MenuFlyoutItem 
                                    Text="{strings:UI Type=TryShowMachineView}"
                                    Command="{x:Bind Command}" 
                                    CommandParameter="{strings:OptionType Type=TryShowMachineView}" 
                                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem8.IsSelected), Mode=OneWay}"
                                    >
                                    <MenuFlyoutItem.Icon>
                                        <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData2(8)}"/>
                                    </MenuFlyoutItem.Icon>
                                    <!--Show Drum Machines View-->
                                </MenuFlyoutItem>

                            </MenuFlyout>
                        </Button.Flyout>
                        <SymbolIcon Symbol="More"/>
                    </Button>
           
            <ListView
                Grid.Column="1"
                SelectedIndex="0"
                SelectionMode="Single"
         
                ScrollViewer.ZoomMode="Disabled"
              
                ScrollViewer.HorizontalScrollMode="Enabled"
                ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                ScrollViewer.IsHorizontalScrollChainingEnabled="True"
        
                ScrollViewer.VerticalScrollMode="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                ScrollViewer.IsVerticalScrollChainingEnabled="False"
                >

                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="MinWidth" Value="60" />
                        <Setter Property="MaxWidth" Value="60" />
                        <Setter Property="Width" Value="60" />
                        <Setter Property="MinHeight" Value="36" />
                        <Setter Property="MaxHeight" Value="36" />
                        <Setter Property="Height" Value="36" />
                        <Setter Property="Background" Value="{ThemeResource AppStroke}" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                </ItemsControl.ItemContainerStyle>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ListViewItem x:Name="ListViewItem0">
                    <ToolTipService.ToolTip>
                        <ToolTip Placement="Bottom" Content="{strings:UI Type=PianoView}">
                            <!--Piano-->
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData(0)}"/>
                </ListViewItem>
                <ListViewItem x:Name="ListViewItem1">
                    <ToolTipService.ToolTip>
                        <ToolTip Placement="Bottom" Content="{strings:UI Type=ChordView}">
                            <!--Chord-->
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData(1)}"/>
                </ListViewItem>
                <ListViewItem x:Name="ListViewItem2">
                    <ToolTipService.ToolTip>
                        <ToolTip Placement="Bottom" Content="{strings:UI Type=GuitarView}">
                            <!--Guitar-->
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData(2)}"/>
                </ListViewItem>
                <ListViewItem x:Name="ListViewItem3">
                    <ToolTipService.ToolTip>
                        <ToolTip Placement="Bottom" Content="{strings:UI Type=BassView}">
                            <!--Bass Guitar-->
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData(3)}"/>
                </ListViewItem>
                <ListViewItem x:Name="ListViewItem4">
                    <ToolTipService.ToolTip>
                        <ToolTip Placement="Bottom" Content="{strings:UI Type=HarpView}">
                            <!--Harp-->
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData(4)}"/>
                </ListViewItem>
                <ListViewItem x:Name="ListViewItem5">
                    <ToolTipService.ToolTip>
                        <ToolTip Placement="Bottom" Content="{strings:UI Type=KitView}">
                            <!--Drum Kit-Set-->
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData(5)}"/>
                </ListViewItem>
                <ListViewItem x:Name="ListViewItem6">
                    <ToolTipService.ToolTip>
                        <ToolTip Placement="Bottom" Content="{strings:UI Type=PadView}">
                            <!--Drum Pads-->
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData(6)}"/>
                </ListViewItem>
                <ListViewItem x:Name="ListViewItem7">
                    <ToolTipService.ToolTip>
                        <ToolTip Placement="Bottom" Content="{strings:UI Type=DrumView}">
                            <!--Drum-->
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData(7)}"/>
                </ListViewItem>
                <ListViewItem x:Name="ListViewItem8">
                    <ToolTipService.ToolTip>
                        <ToolTip Placement="Bottom" Content="{strings:UI Type=MachineView}">
                            <!--Drum Machines-->
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <PathIcon HorizontalAlignment="Center" VerticalAlignment="Center" Data="{x:Bind InstrumentData(8)}"/>
                </ListViewItem>

            </ListView>
            
            </Grid>

            <!--Foot-->
            <Grid Grid.Row="1" >

                <!--Piano-->
                <Grid FlowDirection="LeftToRight" Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem0.IsSelected), Mode=OneWay}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!--Right-->
                    <Border 
                        Grid.Column="2"
                        Margin="4"
                        Width="200"
                        MaxHeight="320"
                        HorizontalAlignment="Center"
                        BorderThickness="2"
                        BorderBrush="{ThemeResource AppBorderBrush}"
                        Visibility="{x:Bind BooleanNullableToVisibilityConverter(PedalItem.IsChecked), Mode=OneWay}"
                        >
                        <StackPanel Margin="4" Spacing="4" Orientation="Horizontal">
                            <controllers:Pedal 
                                Width="60"
                                Controller="Sustain"
                                BorderBrush="{ThemeResource AppFill}"
                                Background="{ThemeResource AppForeground}"
                                Content="{strings:UI Type=PedalSustain}"
                                Command="{x:Bind Command}"
                                >
                                <!--Sustain-->
                            </controllers:Pedal>
                            <controllers:Pedal 
                                Width="60"
                                Controller="AllNotesOff"
                                BorderBrush="{ThemeResource AppFill}"
                                Background="{ThemeResource AppForeground}"
                                Content="{strings:UI Type=PedalSoftPedal}"
                                Command="{x:Bind Command}"
                                >
                                <!--Soft Pedal-->
                            </controllers:Pedal>
                            <controllers:Pedal 
                                Width="60"
                                Controller="Sostenuto"
                                BorderBrush="{ThemeResource AppFill}"
                                Background="{ThemeResource AppForeground}"
                                Content="{strings:UI Type=PedalSostenuto}"
                                Command="{x:Bind Command}"
                                >
                                <!--Sostenuto-->
                            </controllers:Pedal>
                        </StackPanel>
                    </Border>

                    <!--Center-->
                    <Grid Margin="2,0" Grid.Column="1" RowSpacing="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <instruments:PianoHorizontalScrollBar Height="36" ItemSize="28" ScrollViewer="{x:Bind NoteScrollViewer}" Visibility="{x:Bind BooleanNullableToVisibilityConverter(PianoHorizontalScrollBarItem.IsChecked), Mode=OneWay}"/>
                        <ScrollViewer
                            x:Name="NoteScrollViewer"
                            Grid.Row="1"
                            ZoomMode="Disabled"
                             
                            HorizontalScrollMode="Enabled"
                            HorizontalScrollBarVisibility="Hidden"
                            IsHorizontalScrollChainingEnabled="True"
                          
                            VerticalScrollMode="Disabled"
                            VerticalScrollBarVisibility="Disabled"
                            IsVerticalScrollChainingEnabled="False"
                            
                            Background="{ThemeResource AppStroke}"
                            >
                            <instruments:PianoTopPanel
                                x:Name="PianoTopPanel"
                                Label="CDE"
                                ItemSize="28"
                                WhiteSize="420" 
                                BlackSize="240" 
                                Command="{x:Bind Command}"
                                />
                        </ScrollViewer>
                    </Grid>

                    <!--Left-->
                    <Border 
                        Margin="4"
                        Width="200"
                        MaxHeight="320"
                        HorizontalAlignment="Center"
                        BorderThickness="2"
                        BorderBrush="{ThemeResource AppBorderBrush}"
                        Visibility="{x:Bind BooleanNullableToVisibilityConverter(BendItem.IsChecked), Mode=OneWay}"
                        >
                        <StackPanel Margin="4" Orientation="Horizontal">
                            <controllers:BendPitchWheel
                                BorderBrush="{ThemeResource AppBorderBrush}"
                                Background="{ThemeResource AppBorderBrush}"
                                Foreground="{ThemeResource AppFill}"
                                Text="{strings:UI Type=BendPitch}"
                                Command="{x:Bind Command}"
                                >
                                <!--Pitch-->
                            </controllers:BendPitchWheel>
                            <Canvas IsHitTestVisible="False" Width="4" Height="178">
                                <Polygon IsHitTestVisible="False" Points="4,78 0,78 0,0" Fill="{ThemeResource AppFill}"/>
                                <Polygon IsHitTestVisible="False" Points="4,100 0,100 0,178" Fill="{ThemeResource AppFill}"/>
                                <Ellipse IsHitTestVisible="False" Canvas.Top="88" Width="4" Height="4" Fill="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                            </Canvas>
                            <controllers:BendModulationWheel
                                BorderBrush="{ThemeResource AppBorderBrush}"
                                Background="{ThemeResource AppBorderBrush}"
                                Foreground="{ThemeResource AppFill}"
                                Text="{strings:UI Type=BendModulation}"
                                Command="{x:Bind Command}"
                                >
                                <!--Modulation-->
                            </controllers:BendModulationWheel>
                            <Canvas IsHitTestVisible="False" Width="4" Height="178">
                                <Polygon IsHitTestVisible="False" Points="4,16 0,16 0,178 0,178" Fill="{ThemeResource AppFill}"/>
                                <Ellipse IsHitTestVisible="False" Canvas.Top="4" Width="4" Height="4" Fill="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                            </Canvas>
                            <controllers:BendPressureWheel
                                BorderBrush="{ThemeResource AppBorderBrush}"
                                Background="{ThemeResource AppBorderBrush}"
                                Foreground="{ThemeResource AppFill}"
                                Text="{strings:UI Type=BendPressure}"
                                Command="{x:Bind Command}"
                                >
                                <!--Pressure-->
                            </controllers:BendPressureWheel>
                        </StackPanel>
                    </Border>
                </Grid>

                <!--Chord-->
                <Grid 
                    ColumnSpacing="3" 
                    Margin="4" 
                    MinWidth="400" 
                    MinHeight="232" 
                    MaxHeight="520" 
                    MaxWidth="900" 
                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem1.IsSelected), Mode=OneWay}"
                    >
                    <FrameworkElement.Resources>
                        <!--Style-->
                        <Style TargetType="Border">
                            <Setter Property="RequestedTheme" Value="Light"/>
                            <Setter Property="CornerRadius" Value="8"/>
                            <Setter Property="Background" Value="#FCFCFC"/>
                            <Setter Property="Transitions">
                                <Setter.Value>
                                    <!--Transitions-->
                                    <TransitionCollection>
                                        <RepositionThemeTransition IsStaggeringEnabled="False"/>
                                    </TransitionCollection>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </FrameworkElement.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <controls:CarouselCCm ChordPanel="{x:Bind ChordPanel1}" Height="160" VerticalAlignment="Top" IsVisible="{x:Bind ChordItem.IsChecked, Mode=OneWay}"/>
                    <controls:CarouselDmD ChordPanel="{x:Bind ChordPanel2}" Grid.Column="1" Height="160" VerticalAlignment="Top" IsVisible="{x:Bind ChordItem.IsChecked, Mode=OneWay}"/>
                    <controls:CarouselEmE ChordPanel="{x:Bind ChordPanel3}" Grid.Column="2" Height="160" VerticalAlignment="Top" IsVisible="{x:Bind ChordItem.IsChecked, Mode=OneWay}"/>
                    <controls:CarouselFFm ChordPanel="{x:Bind ChordPanel4}" Grid.Column="3" Height="160" VerticalAlignment="Top" IsVisible="{x:Bind ChordItem.IsChecked, Mode=OneWay}"/>
                    <controls:CarouselGGm ChordPanel="{x:Bind ChordPanel5}" Grid.Column="4" Height="160" VerticalAlignment="Top" IsVisible="{x:Bind ChordItem.IsChecked, Mode=OneWay}"/>
                    <controls:CarouselAmA ChordPanel="{x:Bind ChordPanel6}" Grid.Column="5" Height="160" VerticalAlignment="Top" IsVisible="{x:Bind ChordItem.IsChecked, Mode=OneWay}"/>
                    <controls:CarouselBdimBBm ChordPanel="{x:Bind ChordPanel7}" Grid.Column="6" Height="200" VerticalAlignment="Top" IsVisible="{x:Bind ChordItem.IsChecked, Mode=OneWay}"/>

                    <Border Margin="{x:Bind BooleanToThickness163Converter(ChordItem.IsChecked), Mode=OneWay}">
                        <instruments:ChordPanel x:Name="ChordPanel1" Chord="C" Command="{x:Bind Command}"/>
                    </Border>
                    <Border Grid.Column="1" Margin="{x:Bind BooleanToThickness163Converter(ChordItem.IsChecked), Mode=OneWay}">
                        <instruments:ChordPanel x:Name="ChordPanel2" Chord="Dm" Command="{x:Bind Command}"/>
                    </Border>
                    <Border Grid.Column="2" Margin="{x:Bind BooleanToThickness163Converter(ChordItem.IsChecked), Mode=OneWay}">
                        <instruments:ChordPanel x:Name="ChordPanel3" Chord="Em" Command="{x:Bind Command}"/>
                    </Border>
                    <Border Grid.Column="3" Margin="{x:Bind BooleanToThickness163Converter(ChordItem.IsChecked), Mode=OneWay}">
                        <instruments:ChordPanel x:Name="ChordPanel4" Chord="F" Command="{x:Bind Command}"/>
                    </Border>
                    <Border Grid.Column="4" Margin="{x:Bind BooleanToThickness163Converter(ChordItem.IsChecked), Mode=OneWay}">
                        <instruments:ChordPanel x:Name="ChordPanel5" Chord="G" Command="{x:Bind Command}"/>
                    </Border>
                    <Border Grid.Column="5" Margin="{x:Bind BooleanToThickness163Converter(ChordItem.IsChecked), Mode=OneWay}">
                        <instruments:ChordPanel x:Name="ChordPanel6" Chord="Am" Command="{x:Bind Command}"/>
                    </Border>
                    <Border Grid.Column="6" Margin="{x:Bind BooleanToThickness203Converter(ChordItem.IsChecked), Mode=OneWay}">
                        <instruments:ChordPanel x:Name="ChordPanel7" Chord="Bdim" Command="{x:Bind Command}"/>
                    </Border>
                </Grid>

                <!--Guitar-->
                <Grid FlowDirection="LeftToRight" MinHeight="240" Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem2.IsSelected), Mode=OneWay}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <instruments:GuitarScrollBar Orientation="Vertical" VerticalAlignment="Center" ScrollViewer="{x:Bind GuitarScrollViewer}"/>
                    <ScrollViewer
                        x:Name="GuitarScrollViewer"
                        Grid.Column="1"
                        ZoomMode="Disabled"
                         
                        HorizontalScrollMode="Enabled"
                        HorizontalScrollBarVisibility="Hidden"
                        IsHorizontalScrollChainingEnabled="True"
                      
                        VerticalScrollMode="Disabled"
                        VerticalScrollBarVisibility="Disabled"
                        IsVerticalScrollChainingEnabled="False"
                        
                        Background="#CC9D55"
                        >
                        <instruments:GuitarPanel Command="{x:Bind Command}"/>
                    </ScrollViewer>
                </Grid>

                <!--Bass-->
                <Grid FlowDirection="LeftToRight" MinHeight="240" Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem3.IsSelected), Mode=OneWay}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <instruments:GuitarScrollBar Orientation="Vertical" VerticalAlignment="Center" ScrollViewer="{x:Bind BassScrollViewer}"/>
                    <ScrollViewer
                        x:Name="BassScrollViewer"
                        Grid.Column="1"
                        ZoomMode="Disabled"
                         
                        HorizontalScrollMode="Enabled"
                        HorizontalScrollBarVisibility="Hidden"
                        IsHorizontalScrollChainingEnabled="True"
                      
                        VerticalScrollMode="Disabled"
                        VerticalScrollBarVisibility="Disabled"
                        IsVerticalScrollChainingEnabled="False"
                        
                        Background="#22262F"
                        >
                        <instruments:BaseGuitarPanel Command="{x:Bind Command}"/>
                    </ScrollViewer>
                </Grid>

                <!--Harp-->
                <ScrollViewer
                    FlowDirection="LeftToRight" 
                    MaxHeight="400" 
                    ZoomMode="Disabled"
                     
                    HorizontalScrollMode="Enabled"
                    HorizontalScrollBarVisibility="Hidden"
                    IsHorizontalScrollChainingEnabled="True"
                  
                    VerticalScrollMode="Disabled"
                    VerticalScrollBarVisibility="Disabled"
                    IsVerticalScrollChainingEnabled="False"
                    
                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem4.IsSelected), Mode=OneWay}"
                    Background="{ThemeResource AppStroke}"
                    >
                    <instruments:HarpPanel MinHeight="220" Command="{x:Bind Command}"/>
                </ScrollViewer>

                <!--Kit-->
                <Border
                    FlowDirection="LeftToRight" 
                    Margin="2"
                    CornerRadius="4"
                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem5.IsSelected), Mode=OneWay}"
                    >
                    <Viewbox
                        MinHeight="236"
                        MaxHeight="640"
                        >
                        <controls:KitPanel x:Name="KitPanel" Command="{x:Bind Command}"/>
                    </Viewbox>
                </Border>

                <!--Pad-->
                <controls:PadPanel 
                    x:Name="PadPanel"
                    FlowDirection="LeftToRight" 
                    MinHeight="240"
                    MaxHeight="540"
                    Command="{x:Bind Command}"
                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem6.IsSelected), Mode=OneWay}"
                    />

                <!--Drum-->
                <ScrollViewer 
                    x:Name="DrumScrollViewer" 
                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem7.IsSelected), Mode=OneWay}"
                    >
                    <controls:DrumPanel x:Name="DrumPanel" MinHeight="240" Command="{x:Bind Command}"/>
                </ScrollViewer>

                <!--Machine-->
                <controls:MachinePanel 
                    x:Name="MachinePanel" 
                    FlowDirection="LeftToRight" 
                    MinHeight="240"
                    Command="{x:Bind Command}" 
                    Visibility="{x:Bind BooleanToVisibilityConverter(ListViewItem8.IsSelected), Mode=OneWay}"
                    Background="{ThemeResource AppBackground}"
                    />

            </Grid>

            <!--Marble-->
            <Canvas Grid.Row="1" MinWidth="200" MinHeight="200">

                <!--Animation-->
                <elements:AnimationRouletter 
                    x:Name="Rouletter" 
                    Width="200" 
                    Height="200"
                    Canvas.Left="{x:Bind MarbleToRouletteConverter(MarbleButton.(Canvas.Left)), Mode=OneWay}"
                    Canvas.Top="{x:Bind MarbleToRouletteConverter(MarbleButton.(Canvas.Top)), Mode=OneWay}"
                    >
                    <Ellipse Canvas.Left="-1" Canvas.Top="-1" Width="202" Height="202" StrokeThickness="1" Stroke="{ThemeResource ApplicationForegroundThemeBrush}" Fill="{ThemeResource AppStroke}"/>


                    <!--FullScreen-->
                    <elements:PathToggleButton 
                        x:Name="FullScreenButton" 
                        UncheckedCommandParameter="{strings:OptionType Type=FullScreen}" 
                        CheckedCommandParameter="{strings:OptionType Type=UnFullScreen}" 
                        Background="{ThemeResource AppBackground}" 
                        Command="{x:Bind Command}"
                        Data="{x:Bind RouletterData(0)}"
                        >
                        <ToolTipService.ToolTip>
                            <ToolTip Placement="Bottom">
                                <TextBlock>
                                    <Run Text="{strings:UI Type=FullScreen}">
                                        <!--Full-screen-->
                                    </Run>
                                    /
                                    <Run Text="{strings:UI Type=UnFullScreen}">
                                        <!--Exit Full-screen-->
                                    </Run>
                                </TextBlock>
                            </ToolTip>
                        </ToolTipService.ToolTip>
                    </elements:PathToggleButton>
                    <SymbolIcon IsHitTestVisible="False" Canvas.Left="119" Canvas.Top="33" Width="24" Height="24" Symbol="{x:Bind FullScreenSymbolConverter(FullScreenButton.IsChecked), Mode=OneWay}"/>


                    <!--Metronome-->
                    <elements:PathToggleButton
                        x:Name="MetronomeButton" 
                        UncheckedCommandParameter="{strings:OptionType Type=MetronomeStart}" 
                        CheckedCommandParameter="{strings:OptionType Type=MetronomeStop}"
                        Background="{ThemeResource AppBackground}" 
                        Command="{x:Bind Command}"
                        Data="{x:Bind RouletterData(1)}"
                        >
                        <ToolTipService.ToolTip>
                            <ToolTip Placement="Bottom" Content="{strings:UI Type=Metronome}">
                                <!--Metronome-->
                            </ToolTip>
                        </ToolTipService.ToolTip>
                    </elements:PathToggleButton>
                    <Border IsHitTestVisible="False" Canvas.Left="151" Canvas.Top="88" Width="24" Height="24">
                        <PathIcon>
                            <PathIcon.Data>
                                M4.23,6.891L1.133,3.201L0,4.152L3.653,8.505L0.096,18.444L0.158,18.9L1.325,20.557L1.733,20.769L17.851,20.769L18.26,20.557L19.427,18.9L19.489,18.444L13.007,0.332L12.537,0L7.048,0L6.577,0.332L4.23,6.891ZM2.148,15.678L9.091,15.678L9.091,14.987L4.397,9.392L2.148,15.678ZM4.974,7.779L9.091,12.685L9.091,5.747L10.571,5.747L10.571,14.448L11.603,15.678L17.437,15.678L12.185,1L7.4,1L4.974,7.779Z
                            </PathIcon.Data>
                        </PathIcon>
                    </Border>


                    <!--Favorite-->
                    <elements:PathFlyoutButton 
                        Background="{ThemeResource AppBackground}"
                        Data="{x:Bind RouletterData(2)}"
                        >
                        <ToolTipService.ToolTip>
                            <ToolTip Placement="Bottom" Content="{strings:UI Type=Favorite}">
                                <!--Favorites-->
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <elements:PathFlyoutButton.Flyout>
                            <!--Flyout-->
                            <Flyout Placement="Full">
                                <controls:InstrumentCollectionPanel MaxWidth="360" ObservableCollection="{x:Bind Favorites}" Command="{x:Bind Command}"/>
                            </Flyout>
                        </elements:PathFlyoutButton.Flyout>
                    </elements:PathFlyoutButton>
                    <SymbolIcon IsHitTestVisible="False" Canvas.Left="119" Canvas.Top="142" Width="24" Height="24" Symbol="SolidStar"/>


                    <!--Setting-->
                    <elements:PathFlyoutButton
                        Background="{ThemeResource AppBackground}"
                        Data="{x:Bind RouletterData(3)}"
                        >
                        <ToolTipService.ToolTip>
                            <ToolTip Placement="Bottom" Content="{strings:UI Type=Setting}">
                                <!--Setting-->
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <elements:PathFlyoutButton.Flyout>
                            <!--Flyout-->
                            <Flyout Placement="Full">

                                <StackPanel MaxWidth="360">

                                    <Panel.ChildrenTransitions>
                                        <TransitionCollection>
                                            <EntranceThemeTransition IsStaggeringEnabled="True"/>
                                        </TransitionCollection>
                                    </Panel.ChildrenTransitions>

                                    <!--ThemeMode-->
                                    <TextBlock Text="{strings:UI Type=Theme}" Style="{StaticResource SubtitleTextBlockStyle}">
                                        <!--Theme-->
                                    </TextBlock>
                                    <RadioButton x:Name="LightRadioButton" Content="{strings:UI Type=ThemeLight}">
                                        <!--Light-->
                                    </RadioButton>
                                    <RadioButton x:Name="DarkRadioButton" Content="{strings:UI Type=ThemeDark}">
                                        <!--Dark-->
                                    </RadioButton>
                                    <RadioButton x:Name="DefaultRadioButton" Content="{strings:UI Type=ThemeUseSystem}">
                                        <!--Use System-->
                                    </RadioButton>
                                    <ContentControl Height="8"/>

                                    <!--Language-->
                                    <TextBlock Text="{strings:UI Type=Language}" Style="{StaticResource SubtitleTextBlockStyle}">
                                        <!--Languages-->
                                    </TextBlock>
                                    <elements:CommandListView
                                        IsItemClickEnabled="True" 
                                        SelectionMode="Single"
                                        Background="{ThemeResource AppForeground}"
                                        ItemsSource="{x:Bind Languages}"
                                        SelectedIndex="{x:Bind Cultures.Index}"
                                        Command="{x:Bind Command}"
                                        >
                                        <!--ItemsSource-->
                                    </elements:CommandListView>
                                    <HyperlinkButton 
                                        Content="{strings:UI Type=LanguageTip}"
                                        CommandParameter="{strings:OptionType Type=LanguageTip}"
                                        Command="{x:Bind Command}"
                                        >
                                        <!--Restart the app to see your changes.-->
                                    </HyperlinkButton>
                                    <ContentControl Height="8"/>

                                </StackPanel>
                            </Flyout>
                        </elements:PathFlyoutButton.Flyout>
                    </elements:PathFlyoutButton>
                    <SymbolIcon IsHitTestVisible="False" Canvas.Left="56" Canvas.Top="142" Width="24" Height="24" Symbol="Setting"/>


                    <!--About-->
                    <elements:PathFlyoutButton
                        Background="{ThemeResource AppBackground}"
                        Data="{x:Bind RouletterData(4)}"
                        >
                        <ToolTipService.ToolTip>
                            <ToolTip Placement="Bottom" Content="{strings:UI Type=About}">
                                <!--About-->
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <elements:PathFlyoutButton.Flyout>
                            <!--Flyout-->
                            <Flyout Placement="Full" >
                                <StackPanel>

                                    <Panel.ChildrenTransitions>
                                        <TransitionCollection>
                                            <EntranceThemeTransition IsStaggeringEnabled="True"/>
                                        </TransitionCollection>
                                    </Panel.ChildrenTransitions>

                                    <Image Margin="10" Width="150" Height="150" Source="ms-appx:///Icons/Logo.png"/>

                                    <Border Padding="12,0" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="CornerRadius" Value="4"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="BorderBrush" Value="{ThemeResource AppStroke}"/>
                                                <Setter Property="Background" Value="{ThemeResource AppForeground}"/>
                                            </Style>
                                        </Border.Style>
                                        <TextBlock Text="{strings:UI Type=Version}">
                                            <!--Version-->
                                        </TextBlock>
                                    </Border>

                                    <ContentControl Height="12"/>
                                    <TextBlock HorizontalAlignment="Center" Text="{strings:UI Type=Github}">
                                        <!--Github-->
                                    </TextBlock>
                                    <HyperlinkButton HorizontalAlignment="Center" Content="{strings:UI Type=GithubLink}" NavigateUri="{x:Bind GithubLink}">
                                        <!--GithubLink-->
                                    </HyperlinkButton>

                                    <ContentControl Height="12"/>
                                    <TextBlock HorizontalAlignment="Center" Text="{strings:UI Type=Feedback}">
                                        <!--Feedback-->
                                    </TextBlock>
                                    <HyperlinkButton HorizontalAlignment="Center" Content="{strings:UI Type=FeedbackLink}" NavigateUri="{x:Bind FeedbackLink}">
                                        <!--FeedbackLink-->
                                    </HyperlinkButton>

                                </StackPanel>
                            </Flyout>
                        </elements:PathFlyoutButton.Flyout>
                    </elements:PathFlyoutButton>
                    <SymbolIcon IsHitTestVisible="False" Canvas.Left="25" Canvas.Top="88" Width="24" Height="24" Symbol="Important"/>


                    <!--Mute-->
                    <elements:PathToggleButton
                        x:Name="MuteButton" 
                        UncheckedCommandParameter="{strings:OptionType Type=Mute}" 
                        CheckedCommandParameter="{strings:OptionType Type=Volume}"
                        Background="{ThemeResource AppBackground}" 
                        Command="{x:Bind Command}"
                        Data="{x:Bind RouletterData(5)}"
                        >
                        <ToolTipService.ToolTip>
                            <ToolTip Placement="Bottom" Content="{strings:UI Type=Mute}">
                                <!--Mute-->
                            </ToolTip>
                        </ToolTipService.ToolTip>
                    </elements:PathToggleButton>
                    <SymbolIcon IsHitTestVisible="False" Canvas.Left="56" Canvas.Top="33" Width="24" Height="24" Symbol="{x:Bind MuteSymbolConverter(MuteButton.IsChecked), Mode=OneWay}"/>

                    
                </elements:AnimationRouletter>

                <!--MarbleButton-->
                <elements:MarbleButton x:Name="MarbleButton" CommandParameter="{strings:OptionType Type=Roulette}" Command="{x:Bind Command}"/>

            </Canvas>

        </Grid>
    
    </SplitView>
</Page>